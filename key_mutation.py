"""
Key Mutation ‚Äî —É—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏—Å—Ç–æ—Ä–∏–∏ –ø—É–±–ª–∏—á–Ω—ã—Ö –∫–ª—é—á–µ–π –ø–æ Bitcoin-–∞–¥—Ä–µ—Å—É.
"""

import requests
import sys

def fetch_transactions(address):
    url = f"https://blockstream.info/api/address/{address}/txs"
    r = requests.get(url)
    r.raise_for_status()
    return r.json()

def extract_pubkeys(tx_list, address):
    pubkeys = set()
    for tx in tx_list:
        for vin in tx.get("vin", []):
            scriptsig = vin.get("scriptsig_asm", "")
            if address in scriptsig or "OP_CHECKSIG" in scriptsig:
                parts = scriptsig.split(" ")
                for part in parts:
                    if part.startswith("02") or part.startswith("03") or part.startswith("04"):
                        if len(part) in (66, 130):  # compressed / uncompressed pubkey
                            pubkeys.add(part)
    return pubkeys

def main(address):
    print(f"üîç –ê–Ω–∞–ª–∏–∑ –∞–¥—Ä–µ—Å–∞: {address}")
    txs = fetch_transactions(address)
    pubkeys = extract_pubkeys(txs, address)

    if not pubkeys:
        print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –ø—É–±–ª–∏—á–Ω—ã–µ –∫–ª—é—á–∏. –í–æ–∑–º–æ–∂–Ω–æ, –∞–¥—Ä–µ—Å –µ—â—ë –Ω–µ —Ç—Ä–∞—Ç–∏–ª —Å—Ä–µ–¥—Å—Ç–≤–∞.")
    elif len(pubkeys) == 1:
        print("‚úÖ –ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –Ω–µ–∏–∑–º–µ–Ω–µ–Ω. –ë–µ–∑–æ–ø–∞—Å–Ω–æ.")
    else:
        print(f"‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ {len(pubkeys)} —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø—É–±–ª–∏—á–Ω—ã—Ö –∫–ª—é—á–µ–π!")
        for pk in pubkeys:
            print(f" - {pk[:16]}...")

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python key_mutation.py <bitcoin_address>")
        sys.exit(1)
    main(sys.argv[1])
